@{
    Layout = "~/Views/Shared/_Base.cshtml";
}
<link href="~/Content/js/layui/css/modules/layuiAutocomplete.css" rel="stylesheet" />
<script src="~/script/BenDingComm.js"></script>
<style>
    .layui-card-header.layuibd-card-header-auto {
        padding-top: 15px;
        padding-bottom: 15px;
        height: auto;
    }

    .layuibd-card-header-auto i.layuibd-button-btn {
        position: relative;
        right: 0;
        top: 0;
        vertical-align: middle
    }
</style>
<div class="layui-fluid">
    <div class="layui-card">
        <form class="layui-form" lay-filter="LAY-form-render">
           
            @{Html.RenderPartial("_CSharpActiveX");}
            <div class="layui-card-header layuibd-card-header-auto">
                <!--可修改的住院信息-->
                <fieldset class="layui-elem-field layui-field-title" style="margin-top: 20px;">
                    <legend>住院信息</legend>
                </fieldset>
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <label class="layui-form-label">社保住院号</label>
                        <div class="layui-input-inline">
                            <input type="text" name="MedicalInsuranceHospitalizationNo" disabled autocomplete="off" class="layui-input layui-disabled">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">住 院 号 </label>
                        <div class="layui-input-inline">
                            <input type="text" name="HospitalizationNo" disabled autocomplete="off" class="layui-input layui-disabled">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">入院日期</label>
                        <div class="layui-input-inline">
                            <input type="text" name="AdmissionDate" id="AdmissionDate" placeholder="yyyy-MM-dd" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    @*<div class="layui-inline layer_update">
                        <label class="layui-form-label">住院科室</label>
                        <div class="layui-input-inline">
                            <select name="InpatientDepartmentCode" id="InpatientDepartmentCode">
                                <option value="" selected="selected">请选择科室</option>
                            </select>
                        </div>
                    </div>*@

                    <div class="layui-inline ">
                        <label class="layui-form-label">床位号</label>
                        <div class="layui-input-inline">
                            <input type="text" name="BedNumber" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline" id="FetusNumberDiv">
                        <label class="layui-form-label">胎儿数</label>
                        <div class="layui-input-inline">
                            <input type="text" name="FetusNumber" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline" id="HouseholdNatureDiv">
                        <label class="layui-form-label">户口性质</label>
                        <div class="layui-input-inline">
                            <select name="HouseholdNature">
                                <option value="">请选择户口性质</option>
                                <option value="10">城镇户口</option>
                                <option value="20">农业户口</option>
                            </select>
                        </div>
                    </div>
                </div>
                <!--诊断部分-->
                <fieldset class="layui-elem-field layui-field-title" style="margin-top: 20px;">
                    <legend>诊断列表</legend>
                </fieldset>
                <!--搜索部分-->
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <label class="layui-form-label" style="width:100px;">补加医保诊断</label>
                        <div class="layui-input-inline" style="width:280px;">
                            <input type="text" id="DiagnosisSearchData" name="DiagnosisSearchData" placeholder="请输入诊断" class="layui-input">
                        </div>
                    </div>
                </div>
                <!--诊断列表-->
                <table class="layui-table" id="dataTable" lay-size="sm" lay-filter="dataTable"></table>

                <div class="layui-form-item" style="text-align: center;margin-top: 20px;">
                    <button type="submit" id="updateRegister" disabled class="layui-btn layui-btn-disabled layui-btn-radius" lay-submit lay-filter="updateRegister">修改登记</button>

                </div>
            </div>
        </form>
    </div>
</div>

<script>
    layui.config({
        base: '/Content/js/layui/plugin/' //假设这是test.js所在的目录
    }).extend({ //设定模块别名
        autocomplete: 'layAutoComplete'
    });
    var iniJs;
    var iniMsg;
    layui.use(['form', 'laypage', 'layer', 'table', 'element', 'laydate', 'autocomplete'], function () {
        var $ = layui.$
            //Tab的切换功能，切换事件监听等，需要依赖element模块
            , element = layui.element
            , form = layui.form
            , layer = layui.layer
            , table = layui.table
            , laydate = layui.laydate;
        //初始化公共页面
        iniJs = $;
        iniMsg = layer;
        var insuranceTypeValue = null;
        form.render(null, "LAY-form-render");
        //指定入院日期,外部事件调用
        lay('#AdmissionDate').on('click', function () {
            laydate.render({
                elem: '#AdmissionDate'
                , format: 'yyyy-MM-dd'
                , show: true
                , closeStop: '#AdmissionDate'
            });
        });
        //----
        //诊断数据表格实例化
        var layTableId = "dataTableId";
        var tableIns = table.render({
            elem: '#dataTable',
            id: layTableId,
            page: false,
            cols: [
                [
                    { title: '序号', type: 'numbers', width: 80 },
                    { field: 'DiseaseCoding', title: '基层疾病编码', width: 280 },
                    { field: 'DiseaseName', title: '基层疾病名称', width: 280 },
                    { field: 'ProjectCode', title: '医保疾病编码', width: 280 },
                    {
                        field: 'IsMainDiagnosis',
                        title: '主诊',
                        width: 120,
                        event: 'diagnosis',
                        templet: function (d) {
                            var html = [
                                '<input type="checkbox" name="IsMainDiagnosis" lay-skin="switch" lay-text="是|否"'
                            ];
                            html.push(d.IsMainDiagnosis === true ? 'checked' : '');
                            html.push('/>');
                            return html.join('');
                        }
                    }
                    ,{
                        title: '操作',
                        fixed: 'right',
                        templet: function (d) {
                            return '<a class="layui-btn layui-btn-xs layui-btn-danger" lay-event="del" lay-id="' +
                                d.ProjectCode +
                                '"><i class="layui-icon layui-icon-delete"></i>移除</a>';
                        }
                    }
                ]
            ]
        });
       
            //---------
        ////插件检查
        var verification = DetectActiveX();
        if (verification === false) {
            return false;
        }
        //获取医院基本信息回调方法
        window.getHospitalInfoBack = function () { };

        getHospitalInfo(getHospitalInfoBack);

        function getHospitalizationModifyParamIni(data) {
            var field = data.field;
           
            //诊断列表
            var dataTable1 = table.cache[layTableId];
            var diagnosisList = [];
            //排除空值
            $.each(dataTable1, function (k, v) {
                if (v.DiseaseCoding !== undefined) {
                    diagnosisList.push(v);
                }
            });
            //诊断列表 add
            field.DiagnosisList = diagnosisList;

            return field;
        }

        //获取医保入院登记参数
        function getHospitalizationModifyParam(data) {
            var fieldParam = getHospitalizationModifyParamIni(data);
            buttonStatus("updateRegister", false);
            $.ajax({
                type: 'POST',
                url: hostNew + '/GetHospitalizationModifyParam',
                async: false,
                data: JSON.stringify(fieldParam),
                dataType: "json",
                contentType: 'application/json',
                success: function (data) {
                    if (data.Success === false) {
                        var errData = data.Message;
                        msgError(errData);
                        return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
                        //样式类名:墨绿深蓝风
                    } else {
                        var activeX = document.getElementById("CSharpActiveX");
                        //获取医保类型
                       
                        var activeData;
                        var activeJsonData;
                        if (insuranceTypeValue === "342") { //医保入院登记修改
                            activeData = activeX.HospitalizationMethods(data.Data, JSON.stringify(baseInfo.HospitalInfo), "HospitalizationModify");
                            activeJsonData = JSON.parse(activeData);
                            if (activeJsonData.Success === false) {
                                msgError(activeJsonData.Message);
                            } else {
                                hospitalizationModify(fieldParam);
                            }
                        }
                        if (insuranceTypeValue === "310") {
                            //医保入院登记修改
                            activeData = activeX.HospitalizationMethods(data.Data, JSON.stringify(baseInfo.HospitalInfo), "ModifyWorkerHospitalization");
                            activeJsonData = JSON.parse(activeData);
                            if (activeJsonData.Success === false) {
                                msgError(activeJsonData.Message);
                            } else {
                              
                                hospitalizationModify(fieldParam);

                            }
                        }

                    }
                }
            });


        }
        //住院登记
        function hospitalizationModify(fieldParam) {
            $.ajax({
                type: 'POST',
                url: hostNew + '/HospitalizationModify',
                async: false,
                data: JSON.stringify(fieldParam),
                dataType: "json",
                contentType: 'application/json',
                success: function (data) {
                    if (data.Success === false) {
                        var errData = data.Message;
                        msgError(errData);

                    } else {
                        buttonStatus("updateRegister", false);
                        msgSuccess('修改成功');
                       
                    }

                }
            });
        }

        //修改登记
        form.on('submit(updateRegister)', function (data) {

            getHospitalizationModifyParam(data);
            return false; 
          //阻止表单跳转。如果需要表单跳转，去掉这段即可。
        });
        //页面一加载就发送ajax
        $(function () {
            var params = {
                "BusinessId": $("#bid").val() /*当前住院记录的业务ID*/
                , "UserId": $("#empid").val() /*授权操作人的ID*/
                , "Transkey": $("#transkey").val(),/*医保交易ID*/
                "timestamp": (new Date()).valueOf()
            }
            $.ajax({
                url: host +'/QueryMedicalInsurance',
                data: params,
                dataType: "json",
                async: false,
                success: function (res) {
                    if (res.Success === false) {
                        var errData = res.Message;
                        //样式类名:墨绿深蓝风
                        layer.alert(errData, { skin: 'layui-layer-molv', icon: 5, title: '错误提示' });

                      
                    } else {
                      
                        var data = res.Data;
                        insuranceTypeValue = data.InsuranceType;
                        //判断是否生育入院登记
                        if (data.HouseholdNature === null || data.FetusNumber == null && data.InsuranceType !== "342")
                        {
                            $("#FetusNumberDiv").hide();
                            $("#HouseholdNatureDiv").hide();
                        }
                        ////默认选择的科室ID
                        //var departmentCode = data.InpatientDepartmentCode;
                        //selectDepartmentName(departmentCode);
                        //表单初始赋值
                        form.val('LAY-form-render', data);
                       
                        //诊断表初始化
                        var oldData = data.DiagnosisList;
                        tableIns.reload({
                            data: oldData
                        });
                        buttonStatus("updateRegister", true);
                        
                    }

                },
                complete: function () {
                    form.render();
                }
              
            });
            
    
        });
        //------添加医保诊断
        var tableSelect = layui.tableSelect;
        tableSelect.render({
            elem: '#DiagnosisSearchData',
            checkedKey: 'id',
            searchKey: 'Search',//搜索输入框的name值 默认keyword
            searchPlaceholder: '名称/编码',	//搜索输入框的提示文字 默认关键词搜索
            table: {
                url: host + '/MedicalInsuranceQueryIcd10',
                parseData: function (result) {
                    return {
                        "code": result.Code,
                        "msg": result.Message,
                        "data": result.Data.data,
                        "count": result.Data.count
                    };
                },
                cols: [
                    [
                        { type: 'radio' },
                        { field: 'DiseaseCoding', title: '医保疾病编码' },
                        { field: 'DiseaseName', title: '医保疾病名称' },
                        { field: 'ProjectCode', title: '医保疾病编码', hide: true }

                    ]
                ]
            },
            done: function (elem, data) {

                //获取table缓存
                var oldData = table.cache[layTableId];
                var oldDataTable = new Array;
                layui.each(oldData,
                    function (index, item) {
                        //排除空值
                        if (item.DiseaseCoding !== undefined) {
                            //新增诊断编码
                            var addDDiseaseCoding = data.data[0].DiseaseCoding;
                            //诊断去重
                            if (item.DiseaseCoding !== addDDiseaseCoding) {
                                var itemRow = {
                                    DiseaseName: item.DiseaseName,
                                    DiseaseCoding: item.DiseaseCoding,
                                    IsMainDiagnosis: item.IsMainDiagnosis,
                                    ProjectCode: item.DiseaseCoding

                                };
                                oldDataTable.push(itemRow);

                            }
                        }
                    });

                var newRow = {
                    DiseaseName: data.data[0].DiseaseName,
                    DiseaseCoding: data.data[0].DiseaseCoding,
                    ProjectCode: data.data[0].DiseaseCoding,
                    IsMainDiagnosis: false

                };
                //添加选中后的诊断
                oldDataTable.push(newRow);

                //更新table
                tableIns.reload({
                    data: oldDataTable
                });



            }
        });
        //注册按钮事件
        $('.layui-btn[data-type]').on('click',
            function () {
                var type = $(this).data('type');
                activeByType(type);
            });
        //定义事件集合
        var active = {
            updateRow: function (obj) {
                var oldData = table.cache[layTableId];
                console.log(oldData);
                for (var i = 0, row; i < oldData.length; i++) {
                    row = oldData[i];
                    if (row.DiseaseCoding === obj.DiseaseCoding) {
                        $.extend(oldData[i], obj);
                        return;
                    }
                }
                tableIns.reload({
                    data: oldData
                });
            },
            removeEmptyTableCache: function () {
                var oldData = table.cache[layTableId];
                for (var i = 0, row; i < oldData.length; i++) {
                    row = oldData[i];
                    if (!row || !row.Id) {
                        oldData.splice(i, 1); //删除一项
                    }
                    continue;
                }
                tableIns.reload({
                    data: oldData
                });
            }
        };
        //激活事件
        var activeByType = function (type, arg) {
            if (arguments.length === 2) {
                active[type] ? active[type].call(this, arg) : '';
            } else {
                active[type] ? active[type].call(this) : '';
            }
        }
        //监听工具条
        table.on('tool(dataTable)',
            function (obj) {
                var data = obj.data, event = obj.event, tr = obj.tr; //获得当前行 tr 的DOM对象;
                switch (event) {
                    case "diagnosis":
                        var stateVal = tr.find("input[name='IsMainDiagnosis']").prop('checked') ? true : false;
                        $.extend(obj.data, { 'IsMainDiagnosis': stateVal });
                        activeByType('updateRow', obj.data); //更新行记录对象
                        break;
                    case "del":
                        layer.confirm('真的删除行么？',
                            function (index) {
                                obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
                                layer.close(index);
                                //activeByType('removeEmptyTableCache');
                            });
                        break;
                }
            });
            //---
        //科室数据
        //function selectDepartmentName(defaultCode) {
        //    $.ajax({
        //        url: host +'/QueryInformationInfo',
        //        dataType: "json",
        //        async: false,
        //        data: { "DirectoryType": "0", "UserId": $("#empid").val() },
        //        success: function (res) {
        //            var list = res.Data; //返回的数据
        //            var deptSel = document.getElementById("InpatientDepartmentCode"); //add_role_name给select定义的id
        //            for (var i = 0; i < list.length; i++) {
        //                var option = document.createElement("option"); // 创建添加option属性
        //                var lay_value = list[i].DirectoryCode;
        //                option.setAttribute("value", lay_value); // 给option的value添加值
        //                option.innerText = list[i].DirectoryName; // 打印option对应的纯文本
        //                deptSel.appendChild(option); // 给select 添加option子标签
        //                form.render(); // 刷性select，显示出数据
        //            }
        //            //状态选中项
        //            var opts = $('.layer_update .layui-input-inline dl.layui-anim dd');
        //            for (var i = 0; i < opts.length; i++) {
                      
                    
        //                if (opts[i].getAttribute('lay-value') === defaultCode) {
        //                    var select = 'dd[lay-value=' + opts[i].getAttribute('lay-value') + ']';
        //                    $('#InpatientDepartmentCode').siblings("div.layui-form-select").find('dl').find(select).click();
        //                }
        //            }
        //        }
        //    });
        //}


    });
</script> 